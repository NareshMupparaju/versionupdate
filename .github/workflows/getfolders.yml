name: List Files Added in Pull Request

on:
  pull_request:

jobs:
  list-modified-folders:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
        
    - name: Loop through folders
      run: |
        for dir in $(find ./src/* -type d); do
          echo "Directory: $dir"
          if ! git diff HEAD -- $dir; then
            echo "Changes were made!"
          else
            echo "No changes were made."
          fi
        done
            
    - name: Get modified folders
      run: |
        # Get the base branch name from the pull request
        base_branch=$(echo "${{ github.event.pull_request.head.ref }}" | sed 's/refs\/heads\///g')
        
        echo "$base_branch"

        # List the modified folders using find
        folders=$(find ./src -type f -not -path "./.git/*" -not -path "*/$base_branch/*" -exec dirname {} \; | sort | uniq)
        
        # Output the list of modified folders
        echo "$folders"
        
        echo "${{ github.event.pull_request.created_at }}"
          
    - name: Print modified folders
      run: |
          # Retrieve the list of modified folders from the previous step
          folders="${{ steps.modified-folders.outputs.folders }}"

          # Print the list of modified folders
          echo "Modified folders: $folders"
          
    - name: Get Pull Request Details
      id: pr
      uses: octokit/request-action@v2.x
      with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}
          headers: |
            Authorization: ${{ secrets.GITHUB_TOKEN }}

    - name: Get File Paths
      id: file-paths
      uses: octokit/request-action@v2.x
      with:
          route: GET /repos/${{ github.repository }}/commits/${{ steps.pr.outputs.head_sha }}/files
          headers: |
            Authorization: ${{ secrets.GITHUB_TOKEN }}

    - name: Display File Paths
      run: |
          echo "The following files were changed in the pull request:"
          echo "${{ steps.file-paths.outputs.data | from_json | map(attribute='filename') | join('\n') }}"
